{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,iEAAe,MAAM;;;;;;UCnJrB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNa;AACb;AACsC;AACtC;AACA;AACA;AACA,IAAI,2DAAM;AACV;AACA,CAAC,E","sources":["webpack:///./js/modules/slider.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./js/script.js"],"sourcesContent":["function slider(){\r\n\r\n    const getAllSlides = () => document.querySelectorAll('.team__of__three'); \r\n    //for getting all sliders before and after cloning\r\n\r\n    let slides = getAllSlides();\r\n\r\n    const slider = document.querySelector('.team'),\r\n          prev = document.querySelector('.slider__left-arrow'),\r\n          next = document.querySelector('.slider__right-arrow'),\r\n          slidesWrapper = document.querySelector('.team__wrapper'),\r\n          slidesField = document.querySelector('.team__inner'),\r\n          width = window.getComputedStyle(slidesWrapper).width;\r\n\r\n    let slideIndex = 1;\r\n    let offset = deleteNotDigits(width);\r\n\r\n    const firstClone = slides[0].cloneNode(true),\r\n          lastClone = slides[slides.length - 1].cloneNode(true);\r\n\r\n    firstClone.id = 'first-clone';\r\n    lastClone.id = 'last-clone';\r\n\r\n    slidesField.append(firstClone);\r\n    slidesField.prepend(lastClone);\r\n\r\n    slides = getAllSlides();\r\n\r\n    slides.forEach(slide => {\r\n\r\n        slide.style.width = width;\r\n    });\r\n\r\n    slidesField.style.width = 100 * slides.length + '%';\r\n    slidesField.style.display = 'flex';\r\n\r\n    slidesWrapper.style.overflow = 'hidden';\r\n\r\n    slider.style.position = 'relative';\r\n\r\n    //indicator dots for slider\r\n    const indicators = document.createElement('div'),\r\n        dots = [];\r\n    indicators.classList.add('slider__dots');\r\n\r\n    indicators.style.cssText = `\r\n    position: absolute;\r\n    right: 0;\r\n    bottom: 10rem;\r\n    left: 0;\r\n    z-index: 15;\r\n    display: flex;\r\n    justify-content: center;\r\n    `;\r\n\r\n    slider.append(indicators);\r\n\r\n    for (let i = 1; i < slides.length-1; i++) {\r\n\r\n        const dot = document.createElement('span');\r\n        dot.setAttribute('data-slide-to', i);\r\n        dot.classList.add('slider-item');\r\n        if (i == 1) {\r\n            dot.style.backgroundColor = \"#000\";\r\n        }\r\n        indicators.append(dot);\r\n        dots.push(dot);\r\n    }\r\n\r\n\r\n    function deleteNotDigits(str) {\r\n        return +str.replace(/px/, '');\r\n    }\r\n\r\n    const moveToFirstSlide = () => {\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n    };\r\n    \r\n    moveToFirstSlide();\r\n\r\n    const moveToNextSlide = () => {  \r\n        offset += deleteNotDigits(width);\r\n        slideIndex++;\r\n\r\n        slidesField.style.transition = '0.5s all';\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        dots.forEach(dot => dot.style.backgroundColor = '');\r\n        dots[slideIndex - 1].style.backgroundColor = '#000';\r\n    };\r\n\r\n    const moveToPrevSlide = () => {\r\n        offset -= deleteNotDigits(width);\r\n        slideIndex--;\r\n\r\n        slidesField.style.transition = '0.5s all';\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        dots.forEach(dot => dot.style.backgroundColor = '');\r\n        dots[slideIndex - 1].style.backgroundColor = '#000';\r\n    };\r\n\r\n    next.addEventListener('click', moveToNextSlide);\r\n    prev.addEventListener('click', moveToPrevSlide);\r\n\r\n    slidesField.addEventListener('transitionend', () => {\r\n        if(slides[slideIndex].id === firstClone.id) {\r\n            slideIndex = 1;\r\n            offset = deleteNotDigits(width) * slideIndex;\r\n\r\n            dots.forEach(dot => dot.style.backgroundColor = '');\r\n            dots[slideIndex - 1].style.backgroundColor = '#000';\r\n\r\n            slidesField.style.transition = 'none';\r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n        }\r\n\r\n        if(slides[slideIndex].id === lastClone.id) {\r\n            slideIndex = slides.length - 2;\r\n            offset = deleteNotDigits(width) * slideIndex;\r\n\r\n            dots.forEach(dot => dot.style.backgroundColor = '');\r\n            dots[slideIndex - 1].style.backgroundColor = '#000';\r\n\r\n            slidesField.style.transition = 'none';\r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        }\r\n\r\n    });\r\n\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');\r\n\r\n            slideIndex = slideTo;\r\n            offset = deleteNotDigits(width) * (slideIndex);\r\n\r\n            slidesField.style.transition = '0.5s all';\r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n            dots.forEach(dot => dot.style.backgroundColor = '');\r\n            dots[slideIndex - 1].style.backgroundColor = '#000';\r\n        });\r\n    });\r\n}\r\n\r\nexport default slider;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","'use strict';\r\n\r\nimport slider from './modules/slider';\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n\r\n    slider();\r\n\r\n});"],"names":[],"sourceRoot":""}